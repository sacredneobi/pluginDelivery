// Елемент для обеспечения согласования запрос ответ от основного сервера, обязательно должен присутствовать в файле
const pluginEvent = require("./plugin");

const fs = require("fs");
const path = require("path");
const {
  loadingCache,
  firstLoad,
  loadSetting,
  loading, // метод запроса и загрузки данных от стороннего сервера, можно написать и свой не принципиально
} = require("./utils");

// Надстройка для вариант запуска, используется для определения текущего каталога плагина
const dirName =
  process.env.isFork === "true" ? __dirname : path.dirname(process.argv[0]);

// Путь к хранению кеша
const cacheFile = `${dirName}${path.sep}data${path.sep}cache.data`;
let cache = [];

if (!fs.existsSync(`${dirName}${path.sep}data${path.sep}`)) {
  fs.mkdirSync(`${dirName}${path.sep}data${path.sep}`, { recursive: true });
}
// Загрузка настроек если такое имеются для плагина, файл по умолчанию setting.json
loadSetting(dirName);

// Загрузка данных из сохраненного кеша ранее, для быстрой подготовке к работе, опять таки если таковой имеется
firstLoad(cacheFile, (data) => {
  cache = data;
});

// Таймер для перезагрузки кеша при необходимости, допустим для обеспечения актуальности доступных отделений
loadingCache(1000 * 60 * 60 * 12, (data) => {
  cache = data;
});

let beginReload;

// Основной метод который выполняется по запросу от главного сервера
pluginEvent.on("getData", async (data, answer) => {
  const {
    login,
    password,
    search = defSetting?.defSearch,
    reloadCache,
    topLeft,
    bottomRight,
  } = data;

  // login - из диалога доставки
  // password - из диалога доставки

  // search - строка что набрал клиент при поиске
  // reloadCache - кнопка перестроить кеш при редактировании или создании элемента с плагином, тут как раз нужно при необходимости построить кэш

  // topLeft, bottomRight - углы видимой области карты, координаты точки на карте, по ним можно отфильтровать строки для выдачи

  // отладочная информация для отображения в логи
  console.logDebug("SETTING", data);
  console.logDebug(
    "LENGTH CACHE",
    cache?.length ? cache?.length : "empty cache"
  );

  // ЧТобы избежать перзагрузок и получение данных когда кеш не готов есть такой код
  if (reloadCache && !beginReload) {
    beginReload = true;
    cache = await loading(cacheFile, defSetting);
    console.logDebug("CACHE", "reloading done");
    beginReload = false;
    return;
  }

  // Тут необходимо  произвести поиск по кешу или преобразовать ответ от севера

  /*

  ПРИМЕР ЭЛЕМЕНТА В КЕШЕ для корректной работы как на карте так и на списке
  
    {
      name: "",                  // Название элемента строковое произвольное не используется
      workTime: {                // Время работы нужно для будущих задача для отображения и фильтрации по нему
        Monday: "09:00-17:00", 
        Tuesday: "09:00-17:00",
        Wednesday: "09:00-17:00",
        Thursday: "09:00-17:00",
        Friday: "09:00-17:00",
        Saturday: "09:00-17:00",
        Sunday: "-",
      },
      address: "Пункт приймання-видачі (до 30 кг.): вул. Квітнева, 15А",  // Адрес отделения куда доставляется оно видно клиенту
      phone: "380800500609",                                              // Номер телефона отделения, также необходимо будет для будущих изменения
      note: "Миньківці, Квітнева, 15А",                                   // Описание для отделения, если нет адреса
      cash: "0",                                                          // Способ оплаты 0 - наличка 1 - без наличный не используется
      cityCode: "a8a20d8b-fba0-11ed-a361-48df37b92096",                   // Уникальный код города отделения
      weightLim: { MAX: "30" },                                           // Максимальный вес для отображение в списке, иконка лимита по весу
      id: "61362",                                                        // Уникальный идентификатор элемента, по нему строится уникальность, важно чтобы он был уникальным
      codeItem: "61362",                                                  // Код элемента, необходим для передачи в службу расчета стоимости доставки
      city: "Миньківці (Київська обл.)",                                  // Город отделения, дополнительная информация 
      center: { lng: "29.479210000000000", lat: "49.796065000000000" },   // Точка для отображения на карте. координаты отделения по ним же и и можно искать topLeft, bottomRight
      isPlugin: true,                                                     // Параметр говорящий что это данные из плагина в противном случае система будет пытаться найти элемент в базе 
    }
  
  */

  // Метод для ответа главному серверу, важно это сделать до 1 минуты, также этот метод актуален только один раз и только в момент запроса данных в противном случае данные игнорируются
  //Большое количество нет необходимости отдавать поэтому ответ обычно урезается до 300 строк, при необходимости можете этот параметр как увеличить так и уменьшить
  answer(cache ? cache.slice(0, 300) : []);
});
